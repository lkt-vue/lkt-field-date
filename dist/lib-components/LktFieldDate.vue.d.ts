import { LktObject } from "lkt-ts-interfaces";
declare const _default: __VLS_WithTemplateSlots<import("vue").DefineComponent<__VLS_WithDefaults<__VLS_TypePropsToRuntimeProps<{
    modelValue?: Date | undefined;
    placeholder?: string | undefined;
    label?: string | undefined;
    palette?: string | undefined;
    name?: string | undefined;
    valid?: boolean | undefined;
    autocomplete?: boolean | undefined;
    disabled?: boolean | undefined;
    readonly?: boolean | undefined;
    readMode?: boolean | undefined;
    allowReadModeSwitch?: boolean | undefined;
    tabindex?: number | undefined;
    mandatory?: boolean | undefined;
    reset?: boolean | undefined;
    resetMessage?: string | undefined;
    mandatoryMessage?: string | undefined;
    infoMessage?: string | undefined;
    errorMessage?: string | undefined;
    switchEditionMessage?: string | undefined;
    valueSlot?: string | undefined;
    editSlot?: string | undefined;
    slotData?: LktObject | undefined;
    disabledDates?: string[] | undefined;
    utc?: boolean | undefined;
    multiDates?: boolean | undefined;
    inline?: boolean | undefined;
    monthPicker?: boolean | undefined;
    timePicker?: boolean | undefined;
    weekPicker?: boolean | undefined;
    yearPicker?: boolean | undefined;
    preventMinMaxNavigation?: boolean | undefined;
    range?: boolean | undefined;
    emptyLabel?: boolean | undefined;
    minDate?: Date | null | undefined;
    maxDate?: Date | null | undefined;
    modelType?: string | undefined;
    format?: string | undefined;
    locale?: string | undefined;
    flow?: string | undefined;
    autoRange?: string | number | null | undefined;
    multiCalendars?: string | number | boolean | null | undefined;
    presetRanges?: any[] | undefined;
}>, {
    modelValue: () => Date;
    placeholder: string;
    label: string;
    palette: string;
    name: string;
    valid: boolean;
    autocomplete: boolean;
    disabled: boolean;
    readonly: boolean;
    readMode: boolean;
    allowReadModeSwitch: boolean;
    tabindex: undefined;
    mandatory: boolean;
    reset: boolean;
    resetMessage: string;
    mandatoryMessage: string;
    infoMessage: string;
    errorMessage: string;
    showPasswordMessage: string;
    switchEditionMessage: string;
    valueSlot: string;
    editSlot: string;
    slotData: () => {};
    disabledDates: () => never[];
    utc: boolean;
    multiDates: boolean;
    inline: boolean;
    monthPicker: boolean;
    timePicker: boolean;
    weekPicker: boolean;
    yearPicker: boolean;
    preventMinMaxNavigation: boolean;
    range: boolean;
    emptyLabel: boolean;
    minDate: null;
    maxDate: null;
    modelType: string;
    format: string;
    locale: string;
    autoRange: null;
    multiCalendars: null;
    presetRanges: () => never[];
}>, {
    Identifier: string;
    reset: () => string;
    focus: () => void;
    value: () => string;
    isMandatory: () => boolean;
}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {
    "update:modelValue": (...args: any[]) => void;
    "click-info": (...args: any[]) => void;
    "click-error": (...args: any[]) => void;
}, string, import("vue").PublicProps, Readonly<import("vue").ExtractPropTypes<__VLS_WithDefaults<__VLS_TypePropsToRuntimeProps<{
    modelValue?: Date | undefined;
    placeholder?: string | undefined;
    label?: string | undefined;
    palette?: string | undefined;
    name?: string | undefined;
    valid?: boolean | undefined;
    autocomplete?: boolean | undefined;
    disabled?: boolean | undefined;
    readonly?: boolean | undefined;
    readMode?: boolean | undefined;
    allowReadModeSwitch?: boolean | undefined;
    tabindex?: number | undefined;
    mandatory?: boolean | undefined;
    reset?: boolean | undefined;
    resetMessage?: string | undefined;
    mandatoryMessage?: string | undefined;
    infoMessage?: string | undefined;
    errorMessage?: string | undefined;
    switchEditionMessage?: string | undefined;
    valueSlot?: string | undefined;
    editSlot?: string | undefined;
    slotData?: LktObject | undefined;
    disabledDates?: string[] | undefined;
    utc?: boolean | undefined;
    multiDates?: boolean | undefined;
    inline?: boolean | undefined;
    monthPicker?: boolean | undefined;
    timePicker?: boolean | undefined;
    weekPicker?: boolean | undefined;
    yearPicker?: boolean | undefined;
    preventMinMaxNavigation?: boolean | undefined;
    range?: boolean | undefined;
    emptyLabel?: boolean | undefined;
    minDate?: Date | null | undefined;
    maxDate?: Date | null | undefined;
    modelType?: string | undefined;
    format?: string | undefined;
    locale?: string | undefined;
    flow?: string | undefined;
    autoRange?: string | number | null | undefined;
    multiCalendars?: string | number | boolean | null | undefined;
    presetRanges?: any[] | undefined;
}>, {
    modelValue: () => Date;
    placeholder: string;
    label: string;
    palette: string;
    name: string;
    valid: boolean;
    autocomplete: boolean;
    disabled: boolean;
    readonly: boolean;
    readMode: boolean;
    allowReadModeSwitch: boolean;
    tabindex: undefined;
    mandatory: boolean;
    reset: boolean;
    resetMessage: string;
    mandatoryMessage: string;
    infoMessage: string;
    errorMessage: string;
    showPasswordMessage: string;
    switchEditionMessage: string;
    valueSlot: string;
    editSlot: string;
    slotData: () => {};
    disabledDates: () => never[];
    utc: boolean;
    multiDates: boolean;
    inline: boolean;
    monthPicker: boolean;
    timePicker: boolean;
    weekPicker: boolean;
    yearPicker: boolean;
    preventMinMaxNavigation: boolean;
    range: boolean;
    emptyLabel: boolean;
    minDate: null;
    maxDate: null;
    modelType: string;
    format: string;
    locale: string;
    autoRange: null;
    multiCalendars: null;
    presetRanges: () => never[];
}>>> & {
    "onUpdate:modelValue"?: ((...args: any[]) => any) | undefined;
    "onClick-info"?: ((...args: any[]) => any) | undefined;
    "onClick-error"?: ((...args: any[]) => any) | undefined;
}, {
    inline: boolean;
    name: string;
    label: string;
    reset: boolean;
    autocomplete: boolean;
    disabled: boolean;
    readonly: boolean;
    range: boolean;
    mandatory: boolean;
    placeholder: string;
    tabindex: number;
    format: string;
    modelValue: Date;
    palette: string;
    valid: boolean;
    readMode: boolean;
    allowReadModeSwitch: boolean;
    resetMessage: string;
    mandatoryMessage: string;
    infoMessage: string;
    errorMessage: string;
    switchEditionMessage: string;
    valueSlot: string;
    editSlot: string;
    slotData: LktObject;
    disabledDates: string[];
    utc: boolean;
    multiDates: boolean;
    monthPicker: boolean;
    timePicker: boolean;
    weekPicker: boolean;
    yearPicker: boolean;
    preventMinMaxNavigation: boolean;
    emptyLabel: boolean;
    minDate: Date | null;
    maxDate: Date | null;
    modelType: string;
    locale: string;
    autoRange: string | number | null;
    multiCalendars: boolean | number | string | null;
    presetRanges: any[];
}, {}>, {
    label?(_: {}): any;
}>;
export default _default;
type __VLS_NonUndefinedable<T> = T extends undefined ? never : T;
type __VLS_TypePropsToRuntimeProps<T> = {
    [K in keyof T]-?: {} extends Pick<T, K> ? {
        type: import('vue').PropType<__VLS_NonUndefinedable<T[K]>>;
    } : {
        type: import('vue').PropType<T[K]>;
        required: true;
    };
};
type __VLS_WithDefaults<P, D> = {
    [K in keyof Pick<P, keyof P>]: K extends keyof D ? __VLS_Prettify<P[K] & {
        default: D[K];
    }> : P[K];
};
type __VLS_Prettify<T> = {
    [K in keyof T]: T[K];
} & {};
type __VLS_WithTemplateSlots<T, S> = T & {
    new (): {
        $slots: S;
    };
};
